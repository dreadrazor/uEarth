//uEarth: Artificial Life Simulation Software
//(C) Alin-Dragos Petculescu 2010
//Univeristy of Leicester
//www2.le.ac.uk
//Please credit the original author if reusing this code

package earth;

import com.jme3.math.Vector3f;
import java.awt.Dimension;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Iterator;

/**
 *
 * @author DreadRazor
 */
public class Settings extends javax.swing.JFrame {

    /** Creates new form Settings */
    public Settings(Simulation s) {
        initComponents();
        parent=s;
        loadData();
        jLabel13.setText("?");
        ((GraphingData)jPanel5).label="Fitness";
    }
    
    public Settings() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        about = new javax.swing.JDialog();
        jLabel29 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        help = new javax.swing.JDialog();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        min_population = new javax.swing.JSpinner();
        min_resources = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        stat_frequency = new javax.swing.JSpinner();
        sim_frequency = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        best_num = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        age_speed = new javax.swing.JSpinner();
        energy_speed = new javax.swing.JSpinner();
        init_population = new javax.swing.JSpinner();
        init_resources = new javax.swing.JSpinner();
        jButton16 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        xFloor = new javax.swing.JSpinner();
        jLabel26 = new javax.swing.JLabel();
        yFloor = new javax.swing.JSpinner();
        jLabel27 = new javax.swing.JLabel();
        range1 = new javax.swing.JSpinner();
        jLabel28 = new javax.swing.JLabel();
        range2 = new javax.swing.JSpinner();
        init_obstacleslable = new javax.swing.JLabel();
        init_obstacles = new javax.swing.JSpinner();
        jLabel30 = new javax.swing.JLabel();
        fixed_mutation = new javax.swing.JSpinner();
        fixed_crossoverlabel = new javax.swing.JLabel();
        fixed_crossover = new javax.swing.JSpinner();
        yenforce = new javax.swing.JRadioButton();
        nenforce = new javax.swing.JRadioButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        limbs = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        nnetwork = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        dna = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        vmachine = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        target = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        births = new javax.swing.JLabel();
        deaths = new javax.swing.JLabel();
        jPanel5 = new GraphingData(data);
        jLabel22 = new javax.swing.JLabel();
        zoom = new javax.swing.JSlider();
        Zoom = new javax.swing.JLabel();
        Zoom1 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        current_population = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        compare = new javax.swing.JTable();
        target1 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        log = new javax.swing.JTextArea();
        jButton20 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        about.setTitle("About µEarth");

        jLabel29.setText("µEarth: Artificial Life Simulation");

        jLabel32.setText("University of Leicester");

        jLabel33.setText("School of Mathematics & Computer Science");

        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/mini_earth_logo.png"))); // NOI18N

        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/mini_j_logo.png"))); // NOI18N

        jLabel35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/swing-logo.png"))); // NOI18N

        jLabel36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/le_logo.png"))); // NOI18N
        jLabel36.setToolTipText("The University of Leicester University Road Leicester LE1 7RH United Kingdom");

        jLabel37.setText("version 1.00 (alpha)");

        jLabel38.setText("Developed by:  Alin-Dragos Petculescu");

        jLabel39.setText("Under supervision of: Dr. Nir Pitterman");

        jLabel40.setText("(c) A.D.P 2011");

        jLabel41.setText("Freeware under GPL agreement");

        jLabel42.setText("Developed using: jMonkey Engine 3.0");

        jLabel43.setText("http://jmonkeyengine.com/");

        jLabel44.setText("http://jmonkeyengine.org/");

        jLabel45.setText("GUI developed using: Swing Framework ");

        jLabel46.setText("(c) Sun Microsystems");

        jLabel47.setText("http://www.mcs.le.ac.uk/");

        javax.swing.GroupLayout aboutLayout = new javax.swing.GroupLayout(about.getContentPane());
        about.getContentPane().setLayout(aboutLayout);
        aboutLayout.setHorizontalGroup(
            aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutLayout.createSequentialGroup()
                .addGroup(aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(aboutLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel36)
                            .addGroup(aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel31)
                                .addGroup(aboutLayout.createSequentialGroup()
                                    .addComponent(jLabel34)
                                    .addGap(17, 17, 17)))))
                    .addGroup(aboutLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel35)))
                .addGap(18, 18, 18)
                .addGroup(aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29)
                    .addComponent(jLabel42)
                    .addComponent(jLabel37)
                    .addComponent(jLabel38)
                    .addComponent(jLabel39)
                    .addComponent(jLabel40)
                    .addComponent(jLabel41)
                    .addComponent(jLabel43)
                    .addComponent(jLabel44)
                    .addComponent(jLabel45)
                    .addComponent(jLabel46)
                    .addComponent(jLabel33)
                    .addComponent(jLabel32)
                    .addComponent(jLabel47))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        aboutLayout.setVerticalGroup(
            aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, aboutLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31)
                    .addGroup(aboutLayout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel37)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel38)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel39)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel40)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel41)))
                .addGap(21, 21, 21)
                .addGroup(aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(aboutLayout.createSequentialGroup()
                        .addComponent(jLabel34)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel35))
                    .addGroup(aboutLayout.createSequentialGroup()
                        .addComponent(jLabel42)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel43)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel44)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel45)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel46)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(aboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(aboutLayout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel47))
                    .addComponent(jLabel36))
                .addContainerGap())
        );

        help.setTitle("Help");
        help.setAlwaysOnTop(true);

        jLabel51.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel51.setText("Hovering with the mouse over the GUI labels will reveal the help tooltip.");

        jLabel52.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/help.png"))); // NOI18N

        jLabel54.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/wasd.png"))); // NOI18N

        jLabel56.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/thumb.png"))); // NOI18N

        jLabel53.setText("Use the WASD keys to move while inside the 3D view.");

        jLabel55.setText("Clicking on a creature will select it (indicated by a red arrow).");

        jLabel57.setText("The blue arrow indicates the creature's target.");

        jLabel58.setText("A blue arrow is above the selected creature indicates 'idle'.");

        jLabel59.setText("Foucs between 3D and GUI modes is switched using TAB.");

        jLabel60.setText("The blue arrow indicates where the creature is going.");

        jLabel61.setText("Creature selection in 3D may be a bit difficult at times;");

        jLabel62.setText("If it fails, the locator functions in the GUI can be used.");

        jLabel63.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel63.setText("General help");

        javax.swing.GroupLayout helpLayout = new javax.swing.GroupLayout(help.getContentPane());
        help.getContentPane().setLayout(helpLayout);
        helpLayout.setHorizontalGroup(
            helpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(helpLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(helpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel51)
                    .addGroup(helpLayout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(jLabel62))
                    .addComponent(jLabel63)
                    .addComponent(jLabel52, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)
                    .addGroup(helpLayout.createSequentialGroup()
                        .addComponent(jLabel54)
                        .addGap(18, 18, 18)
                        .addGroup(helpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel53)
                            .addComponent(jLabel55)
                            .addComponent(jLabel60)
                            .addComponent(jLabel57)
                            .addComponent(jLabel58)
                            .addComponent(jLabel59)
                            .addComponent(jLabel61))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel56)))
                .addContainerGap())
        );
        helpLayout.setVerticalGroup(
            helpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, helpLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel63)
                .addGap(18, 18, 18)
                .addGroup(helpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel54)
                    .addGroup(helpLayout.createSequentialGroup()
                        .addComponent(jLabel53)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel55)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel60)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel57)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel58)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel59)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel61))
                    .addComponent(jLabel56))
                .addGap(7, 7, 7)
                .addComponent(jLabel62)
                .addGap(18, 18, 18)
                .addComponent(jLabel51)
                .addGap(18, 18, 18)
                .addComponent(jLabel52)
                .addGap(46, 46, 46))
        );

        setTitle("µEarth: Artificial Life Simulation");
        setAlwaysOnTop(true);

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabbedPane1.setName("mainPannel"); // NOI18N

        jPanel2.setToolTipText("Simulation settings screen");

        jLabel1.setText("Initial Population");
        jLabel1.setToolTipText("Initial population to be seeded in the simulation");
        jLabel1.setAlignmentX(0.5F);
        jLabel1.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel1.setMinimumSize(new java.awt.Dimension(60, 60));

        jLabel2.setText("Minumum Population");
        jLabel2.setToolTipText("Minimum population to be maintained");
        jLabel2.setAlignmentX(0.5F);
        jLabel2.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel2.setMinimumSize(new java.awt.Dimension(60, 60));

        jLabel3.setText("Initial Resources");
        jLabel3.setToolTipText("Initial resources to be seeded in the simulation");
        jLabel3.setAlignmentX(0.5F);
        jLabel3.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel3.setMinimumSize(new java.awt.Dimension(60, 60));

        jLabel4.setText("Minimum Resources");
        jLabel4.setToolTipText("Minimum resource number to be maintained");
        jLabel4.setAlignmentX(0.5F);
        jLabel4.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel4.setMinimumSize(new java.awt.Dimension(60, 60));

        min_population.setMaximumSize(new java.awt.Dimension(60, 60));
        min_population.setMinimumSize(new java.awt.Dimension(60, 60));

        min_resources.setMaximumSize(new java.awt.Dimension(60, 60));
        min_resources.setMinimumSize(new java.awt.Dimension(60, 60));

        jLabel7.setText("Stat Frequency");
        jLabel7.setToolTipText("How many seconds apart should stat collection occur. Cannot be changed dynamically");

        jLabel8.setText("Simulation Frequency");
        jLabel8.setToolTipText("Logical simulation tick frequency. High rates may break creature movement patterns.");

        stat_frequency.setMaximumSize(new java.awt.Dimension(60, 60));
        stat_frequency.setMinimumSize(new java.awt.Dimension(60, 60));

        sim_frequency.setMaximumSize(new java.awt.Dimension(60, 60));
        sim_frequency.setMinimumSize(new java.awt.Dimension(60, 60));

        jLabel9.setText("Best Specimens");
        jLabel9.setToolTipText("Specimen set which auto-balancing will consider");
        jLabel9.setAlignmentX(0.5F);
        jLabel9.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel9.setMinimumSize(new java.awt.Dimension(60, 60));

        best_num.setMaximumSize(new java.awt.Dimension(60, 60));
        best_num.setMinimumSize(new java.awt.Dimension(60, 60));

        jLabel10.setText("Age Speed");
        jLabel10.setToolTipText("Global creature aging speed");
        jLabel10.setAlignmentX(0.5F);
        jLabel10.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel10.setMinimumSize(new java.awt.Dimension(60, 60));

        jLabel11.setText("Energy Consumption");
        jLabel11.setToolTipText("Global creature energy consumption speed");
        jLabel11.setAlignmentX(0.5F);
        jLabel11.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel11.setMinimumSize(new java.awt.Dimension(60, 60));

        age_speed.setMaximumSize(new java.awt.Dimension(60, 60));
        age_speed.setMinimumSize(new java.awt.Dimension(60, 60));

        energy_speed.setMaximumSize(new java.awt.Dimension(60, 60));
        energy_speed.setMinimumSize(new java.awt.Dimension(60, 60));

        init_population.setMaximumSize(new java.awt.Dimension(60, 60));
        init_population.setMinimumSize(new java.awt.Dimension(60, 60));
        init_population.setName("init_pop"); // NOI18N

        init_resources.setMaximumSize(new java.awt.Dimension(60, 60));
        init_resources.setMinimumSize(new java.awt.Dimension(60, 60));

        jButton16.setText("Apply");
        jButton16.setToolTipText("Apply current settings to simulation. Initial settings cannot be applied dynamically.");
        jButton16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton16MouseClicked(evt);
            }
        });

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/warning.png"))); // NOI18N
        jLabel20.setToolTipText("Changing these might cause simulation instability or poor results");

        jLabel25.setText("World Length");
        jLabel25.setToolTipText("World X-size");
        jLabel25.setAlignmentX(0.5F);
        jLabel25.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel25.setMinimumSize(new java.awt.Dimension(60, 60));

        xFloor.setMaximumSize(new java.awt.Dimension(60, 60));
        xFloor.setMinimumSize(new java.awt.Dimension(60, 60));

        jLabel26.setText("World Width");
        jLabel26.setToolTipText("World Y-size");
        jLabel26.setAlignmentX(0.5F);
        jLabel26.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel26.setMinimumSize(new java.awt.Dimension(60, 60));

        yFloor.setMaximumSize(new java.awt.Dimension(60, 60));
        yFloor.setMinimumSize(new java.awt.Dimension(60, 60));

        jLabel27.setText("Distribution Length");
        jLabel27.setToolTipText("Creature distribution X-size");
        jLabel27.setAlignmentX(0.5F);
        jLabel27.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel27.setMinimumSize(new java.awt.Dimension(60, 60));

        range1.setMaximumSize(new java.awt.Dimension(60, 60));
        range1.setMinimumSize(new java.awt.Dimension(60, 60));

        jLabel28.setText("Distribution Width");
        jLabel28.setToolTipText("Creature distribution Y-size");
        jLabel28.setAlignmentX(0.5F);
        jLabel28.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel28.setMinimumSize(new java.awt.Dimension(60, 60));

        range2.setMaximumSize(new java.awt.Dimension(60, 60));
        range2.setMinimumSize(new java.awt.Dimension(60, 60));

        init_obstacleslable.setText("Initial Obstacles");
        init_obstacleslable.setToolTipText("Initial number of seeded obstacles");
        init_obstacleslable.setAlignmentX(0.5F);
        init_obstacleslable.setMaximumSize(new java.awt.Dimension(60, 60));
        init_obstacleslable.setMinimumSize(new java.awt.Dimension(60, 60));

        init_obstacles.setMaximumSize(new java.awt.Dimension(60, 60));
        init_obstacles.setMinimumSize(new java.awt.Dimension(60, 60));

        jLabel30.setText("Fixed Mutation Rate");
        jLabel30.setToolTipText("Use this to fix mutation rate to a certain number. Note that the spedified value is divided by 1000");
        jLabel30.setAlignmentX(0.5F);
        jLabel30.setMaximumSize(new java.awt.Dimension(60, 60));
        jLabel30.setMinimumSize(new java.awt.Dimension(60, 60));

        fixed_mutation.setMaximumSize(new java.awt.Dimension(60, 60));
        fixed_mutation.setMinimumSize(new java.awt.Dimension(60, 60));

        fixed_crossoverlabel.setText("Fixed Crossover Rate");
        fixed_crossoverlabel.setToolTipText("Use this to fix crossover rate to a certain number. Note that the spedified value is divided by 1000");
        fixed_crossoverlabel.setAlignmentX(0.5F);
        fixed_crossoverlabel.setMaximumSize(new java.awt.Dimension(60, 60));
        fixed_crossoverlabel.setMinimumSize(new java.awt.Dimension(60, 60));

        fixed_crossover.setMaximumSize(new java.awt.Dimension(60, 60));
        fixed_crossover.setMinimumSize(new java.awt.Dimension(60, 60));

        yenforce.setText("Enforce");
        yenforce.setToolTipText("Enfroce mutation and crossover");
        yenforce.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                yenforceMouseClicked(evt);
            }
        });

        nenforce.setText("Don't Enforce");
        nenforce.setToolTipText("Do not enforce mutation and crossover");
        nenforce.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nenforceMouseClicked(evt);
            }
        });

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/big_earth_logo.png"))); // NOI18N
        jLabel14.setToolTipText("Artificial life simulation software (c) Alin-Dragos Petculescu 2011");

        jLabel48.setFont(new java.awt.Font("Vijaya", 1, 36));
        jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel48.setText("µEarth: Artificial Life Simulation");

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel49.setText("/1000");

        jLabel50.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel50.setText("/1000");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nenforce)
                                    .addComponent(yenforce))
                                .addGap(93, 93, 93))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                                    .addComponent(fixed_crossoverlabel, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                                    .addComponent(init_obstacleslable, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                                    .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                                    .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(init_population, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(min_population, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(init_resources, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(min_resources, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(best_num, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(age_speed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(energy_speed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(xFloor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(yFloor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(range1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(range2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(init_obstacles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(fixed_crossover, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                                    .addComponent(fixed_mutation, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel50)
                                    .addComponent(jLabel49))))
                        .addGap(84, 84, 84))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jButton16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(149, 149, 149))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sim_frequency, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                            .addComponent(stat_frequency, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addGap(612, 612, 612))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(init_population, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(min_population, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(init_resources, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(min_resources, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(best_num, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(age_speed, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(energy_speed, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(xFloor, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(yFloor, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(range1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(range2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(init_obstacleslable, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(init_obstacles, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fixed_mutation, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel49))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fixed_crossoverlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fixed_crossover, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel50))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(yenforce)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nenforce)
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(stat_frequency, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(sim_frequency, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(36, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel48)
                        .addGap(325, 325, 325))))
        );

        jTabbedPane1.addTab("Settings", jPanel2);

        jPanel3.setToolTipText("Creature inspection screen");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel16.setText("Neural Network");
        jLabel16.setToolTipText("Efficiency and values in neural network");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel17.setText("Numeric DNA");
        jLabel17.setToolTipText("Numeric DNA representation and creature state");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel18.setText("Virtual Machine");
        jLabel18.setToolTipText("Movement emulation machine");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel19.setText("Limbs");
        jLabel19.setToolTipText("Limb description");

        limbs.setColumns(20);
        limbs.setRows(5);
        jScrollPane1.setViewportView(limbs);

        nnetwork.setColumns(20);
        nnetwork.setRows(5);
        jScrollPane2.setViewportView(nnetwork);

        dna.setColumns(20);
        dna.setRows(5);
        jScrollPane3.setViewportView(dna);

        vmachine.setColumns(20);
        vmachine.setRows(5);
        jScrollPane4.setViewportView(vmachine);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel19)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane4)
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Creature", jPanel3);

        jPanel4.setToolTipText("Creature interaction screen");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel15.setText("Name:");
        jLabel15.setToolTipText("Target creature");

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/kill.png"))); // NOI18N
        jButton8.setToolTipText("Kill target");
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton8MouseClicked(evt);
            }
        });

        target.setText("Target");

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/boot.png"))); // NOI18N
        jButton9.setToolTipText("Boot target (apply some force to nudge it)");
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton9MouseClicked(evt);
            }
        });

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/feed.png"))); // NOI18N
        jButton10.setToolTipText("Feed target (up to maximum capacity)");
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton10MouseClicked(evt);
            }
        });

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/empty.png"))); // NOI18N
        jButton11.setToolTipText("Starve target (take away half its energy)");
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton11MouseClicked(evt);
            }
        });

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/find.png"))); // NOI18N
        jButton12.setToolTipText("Locate critter specified beneath");
        jButton12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton12MouseClicked(evt);
            }
        });

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("Critter");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Found");

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Input creature ID and press the magnifier button.");

        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/best.png"))); // NOI18N
        jButton14.setToolTipText("Locate fittest specimen");
        jButton14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton14MouseClicked(evt);
            }
        });

        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/brain.png"))); // NOI18N
        jButton15.setToolTipText("Locate smartest specimen (based on neural tests)");
        jButton15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton15MouseClicked(evt);
            }
        });

        jButton17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/move.png"))); // NOI18N
        jButton17.setToolTipText("Locate specimen with best movement");
        jButton17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton17MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jButton12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jButton15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jButton17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(target)
                    .addComponent(jLabel12))
                .addGap(82, 82, 82))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel12)
                    .addComponent(target))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton12)
                    .addComponent(jButton14)
                    .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addComponent(jLabel21)
                .addGap(313, 313, 313))
        );

        jTabbedPane1.addTab("Interact", jPanel4);

        jPanel1.setToolTipText("Statistics screen");

        jButton1.setText("Population");
        jButton1.setToolTipText("Display population graph");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("Fitness");
        jButton2.setToolTipText("Display average fitness graph");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setText("Neural Efficiency");
        jButton3.setToolTipText("Display average neural efficiency graph");
        jButton3.setActionCommand("");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jButton4.setText("Movement Efficiency");
        jButton4.setToolTipText("Display average movement efficiency graph");
        jButton4.setActionCommand("");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        jButton5.setText("Children");
        jButton5.setToolTipText("Display average number of children graph");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        jButton7.setText("Mutation");
        jButton7.setToolTipText("Display average mutation graph");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });

        jLabel5.setText("Births:");

        jLabel6.setText("Deaths:");

        births.setText("0");

        deaths.setText("0");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 589, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 531, Short.MAX_VALUE)
        );

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/logo2.png"))); // NOI18N

        zoom.setMinimum(10);
        zoom.setToolTipText("Number of points to be displayed in graph (10 to 100)");
        zoom.setValue(20);
        zoom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                zoomMouseReleased(evt);
            }
        });

        Zoom.setFont(new java.awt.Font("Tahoma", 1, 11));
        Zoom.setText("10");

        Zoom1.setFont(new java.awt.Font("Tahoma", 1, 11));
        Zoom1.setText("100");

        jButton13.setText("Crossover");
        jButton13.setToolTipText("Display average crossover rate graph");
        jButton13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton13MouseClicked(evt);
            }
        });

        jButton6.setText("Lifespan");
        jButton6.setToolTipText("Display average lifespan graph");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });

        jLabel24.setText("Population:");

        current_population.setText("0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(births))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deaths))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel24)
                            .addGap(18, 18, 18)
                            .addComponent(current_population)))
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(Zoom)
                        .addGap(18, 18, 18)
                        .addComponent(zoom, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(Zoom1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(11, 11, 11)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton6)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(births)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(deaths)))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel24)
                        .addComponent(current_population))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Zoom1)
                        .addComponent(Zoom))
                    .addComponent(zoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Statistics", jPanel1);

        jPanel6.setToolTipText("Creature parent comparison screen");

        compare.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Name", null, null, null},
                {null, null, null, null},
                {"Generation", null, null, null},
                {"Fitness", null, null, null},
                {"Sensor Range", null, null, null},
                {"Max Energy", null, null, null},
                {"Mating Thr.", null, null, null},
                {"Hunger Thr.", null, null, null},
                {"Max Life", null, null, null},
                {"Maturity Thr.", null, null, null},
                {"Aggression", null, null, null},
                {"Mutation", null, null, null},
                {"Crossover", null, null, null},
                {"Core Radius", null, null, null},
                {"Core Weight", null, null, null},
                {"", null, null, null},
                {"Limb0", null, null, null},
                {"Limb1", null, null, null},
                {"Limb2", null, null, null},
                {"Limb3", null, null, null},
                {"Limb4", null, null, null},
                {"Limb5", null, null, null},
                {"", null, null, null},
                {"Similarity%", null, null, null}
            },
            new String [] {
                "Characteristic", "Parent 1", "Creature", "Parent 2"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        compare.setColumnSelectionAllowed(true);
        jScrollPane5.setViewportView(compare);
        compare.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        compare.getColumnModel().getColumn(0).setResizable(false);

        target1.setText("Target");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel23.setText("Name:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 734, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(target1)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(target1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(139, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Parents", jPanel6);

        jPanel8.setToolTipText("Simulation log");

        log.setColumns(20);
        log.setRows(5);
        jScrollPane6.setViewportView(log);

        jButton20.setText("Clear");
        jButton20.setToolTipText("Clear currently logged data");
        jButton20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton20MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 734, Short.MAX_VALUE)
                    .addComponent(jButton20))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton20)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Log", jPanel8);

        jMenu1.setText("Menu");

        jMenuItem3.setText("Save Params");
        jMenuItem3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jMenuItem3MouseReleased(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Exit");
        jMenuItem4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jMenuItem4MouseReleased(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        jMenuItem2.setText("Help");
        jMenuItem2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jMenuItem2MouseReleased(evt);
            }
        });
        jMenuItem2.addMenuKeyListener(new javax.swing.event.MenuKeyListener() {
            public void menuKeyPressed(javax.swing.event.MenuKeyEvent evt) {
            }
            public void menuKeyReleased(javax.swing.event.MenuKeyEvent evt) {
                jMenuItem2MenuKeyReleased(evt);
            }
            public void menuKeyTyped(javax.swing.event.MenuKeyEvent evt) {
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem1.setText("About");
        jMenuItem1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jMenuItem1MouseReleased(evt);
            }
        });
        jMenuItem1.addMenuKeyListener(new javax.swing.event.MenuKeyListener() {
            public void menuKeyPressed(javax.swing.event.MenuKeyEvent evt) {
            }
            public void menuKeyReleased(javax.swing.event.MenuKeyEvent evt) {
                jMenuItem1MenuKeyReleased(evt);
            }
            public void menuKeyTyped(javax.swing.event.MenuKeyEvent evt) {
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 763, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton16MouseClicked
        setData(); // modify simulation parameters
    }//GEN-LAST:event_jButton16MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        updateGraph("Population");
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        updateGraph("Fitness");
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        updateGraph("Neural");
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        updateGraph("Movement");
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        updateGraph("Children");
    }//GEN-LAST:event_jButton5MouseClicked

    private void jButton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseClicked
        updateGraph("Mutation");
    }//GEN-LAST:event_jButton7MouseClicked

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        updateGraph("Lifespan");
    }//GEN-LAST:event_jButton6MouseClicked

    private void jButton12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton12MouseClicked
        parent.locateCritter(jTextField1.getText());
        if (parent.selected_critter==null) jLabel13.setText("Critter "+jTextField1.getText()+" was not found.");
        else jLabel13.setText(parent.selected_critter.getName()+" was found");
    }//GEN-LAST:event_jButton12MouseClicked

    private void jButton8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseClicked
        kill();
    }//GEN-LAST:event_jButton8MouseClicked

    private void jButton9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MouseClicked
        poke();
    }//GEN-LAST:event_jButton9MouseClicked

    private void jButton10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton10MouseClicked
        feed();
    }//GEN-LAST:event_jButton10MouseClicked

    private void jButton11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton11MouseClicked
        starve();
    }//GEN-LAST:event_jButton11MouseClicked

    private void zoomMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_zoomMouseReleased
        // TODO add your handling code here:
        maxdata=zoom.getValue(); //change maximum number of points displayed (10 to 100)
    }//GEN-LAST:event_zoomMouseReleased

    private void jButton13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton13MouseClicked
        updateGraph("Crossover");
    }//GEN-LAST:event_jButton13MouseClicked

    private void jButton14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton14MouseClicked
        parent.locateBest();
    }//GEN-LAST:event_jButton14MouseClicked

    private void jButton15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton15MouseClicked
        parent.locateSmartest();
    }//GEN-LAST:event_jButton15MouseClicked

    private void jButton17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton17MouseClicked
        parent.locateStrongest();
    }//GEN-LAST:event_jButton17MouseClicked

    private void jMenuItem4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem4MouseReleased
        parent.stop();
    }//GEN-LAST:event_jMenuItem4MouseReleased

    private void jButton20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton20MouseClicked
        clearLog();
    }//GEN-LAST:event_jButton20MouseClicked

    private void yenforceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yenforceMouseClicked
        enforce_params=true;
        nenforce.setSelected(false);
    }//GEN-LAST:event_yenforceMouseClicked

    private void nenforceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nenforceMouseClicked
        enforce_params=false;
        yenforce.setSelected(false);
    }//GEN-LAST:event_nenforceMouseClicked

    private void jMenuItem1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem1MouseReleased
        about.setVisible(true);
        about.setAlwaysOnTop(true);
        about.toFront();
        about.setSize(new Dimension(475,475));
        about.setResizable(false);
    }//GEN-LAST:event_jMenuItem1MouseReleased

    private void jMenuItem2MenuKeyReleased(javax.swing.event.MenuKeyEvent evt) {//GEN-FIRST:event_jMenuItem2MenuKeyReleased
        help.setVisible(true);
        help.setAlwaysOnTop(true);
        help.toFront();
        //help.setSize(new Dimension(475,475));
        help.setResizable(false);
    }//GEN-LAST:event_jMenuItem2MenuKeyReleased

    private void jMenuItem2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem2MouseReleased
        help.setVisible(true);
        help.setAlwaysOnTop(true);
        help.toFront();
        help.setSize(new Dimension(675,750));
        help.setResizable(false);
    }//GEN-LAST:event_jMenuItem2MouseReleased

    private void jMenuItem1MenuKeyReleased(javax.swing.event.MenuKeyEvent evt) {//GEN-FIRST:event_jMenuItem1MenuKeyReleased
        about.setVisible(true);
        about.setAlwaysOnTop(true);
        about.toFront();
        about.setSize(new Dimension(475,475));
        about.setResizable(false);
    }//GEN-LAST:event_jMenuItem1MenuKeyReleased

    private void jMenuItem3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem3MouseReleased
        try {
            saveParams();
        } catch (IOException ex) {
            log("(?)Failed saving parameters "+ex.getMessage());
        }
    }//GEN-LAST:event_jMenuItem3MouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Settings().setVisible(true);
            }
        });
    }
    // Simulation #
    public Simulation parent;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Zoom;
    private javax.swing.JLabel Zoom1;
    private javax.swing.JDialog about;
    private javax.swing.JSpinner age_speed;
    private javax.swing.JSpinner best_num;
    private javax.swing.JLabel births;
    private javax.swing.JTable compare;
    private javax.swing.JLabel current_population;
    private javax.swing.JLabel deaths;
    private javax.swing.JTextArea dna;
    private javax.swing.JSpinner energy_speed;
    private javax.swing.JSpinner fixed_crossover;
    private javax.swing.JLabel fixed_crossoverlabel;
    private javax.swing.JSpinner fixed_mutation;
    private javax.swing.JDialog help;
    private javax.swing.JSpinner init_obstacles;
    private javax.swing.JLabel init_obstacleslable;
    private javax.swing.JSpinner init_population;
    private javax.swing.JSpinner init_resources;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextArea limbs;
    private static javax.swing.JTextArea log;
    private javax.swing.JSpinner min_population;
    private javax.swing.JSpinner min_resources;
    private javax.swing.JRadioButton nenforce;
    private javax.swing.JTextArea nnetwork;
    private javax.swing.JSpinner range1;
    private javax.swing.JSpinner range2;
    private javax.swing.JSpinner sim_frequency;
    private javax.swing.JSpinner stat_frequency;
    private javax.swing.JLabel target;
    private javax.swing.JLabel target1;
    private javax.swing.JTextArea vmachine;
    private javax.swing.JSpinner xFloor;
    private javax.swing.JSpinner yFloor;
    private javax.swing.JRadioButton yenforce;
    private javax.swing.JSlider zoom;
    // End of variables declaration//GEN-END:variables

    //public float[] data;
    final int PAD = 20;
    public int maxdata=20;
    
    float[] data = {1f,2f};
    String graphState="Fitness";
    
    boolean enforce_params=false;
    
    private void loadData(){
        
        init_population.setValue(parent.init_population);
        min_population.setValue(parent.min_population);
        init_resources.setValue(parent.init_resources);
        min_resources.setValue(parent.min_resources);
        
        best_num.setValue(parent.best_num);
        age_speed.setValue((int)(parent.age_speed*1000));
        energy_speed.setValue((int)(parent.energy_speed*1000));
        
        sim_frequency.setValue((int)parent.sim_frequency);
        stat_frequency.setValue(parent.stat_frequency);
        
        xFloor.setValue(parent.xFloor);
        yFloor.setValue(parent.yFloor);
                
        range1.setValue(parent.range1);
        range2.setValue(parent.range2);
                
	init_obstacles.setValue(parent.init_obstacles);
                
        fixed_mutation.setValue((int)(parent.fixed_mutation*1000));
        fixed_crossover.setValue((int)(parent.fixed_crossover*1000));
        enforce_params = parent.enforce_params;
        
        //toggle radio buttons
        if (enforce_params){
            yenforce.setSelected(true);
            nenforce.setSelected(false);
        } else {
            nenforce.setSelected(true);
            yenforce.setSelected(false);
        }
                       
    }
    
    public void updateData(){
    
        //loadData();
        try{
            
        if (parent.selected_critter!=null){
                    
            dna.setText(parent.selected_critter.describeDNA());
            nnetwork.setText(parent.selected_critter.describeNNetwork());
            vmachine.setText(parent.selected_critter.describeVMachine());
            limbs.setText(parent.selected_critter.describeLimbs());
            
            target.setText(parent.selected_critter.getName());
            target1.setText(parent.selected_critter.getName());
            
            //put parents and child into comparison table
            compare.setValueAt(parent.selected_critter.parent1name, 0, 1);
            compare.setValueAt(parent.selected_critter.getName(), 0, 2);
            compare.setValueAt(parent.selected_critter.parent2name, 0, 3);
            
            //child dna array
            float[] child = new float[13];
            child=parent.selected_critter.arrayDNA();
                        
            //parent1 column
            float[] parent1 = new float[13];
            int simpoint1=0;
            parent1=parent.selected_critter.parent1dna;
                for (int i=0; i<parent1.length; i++){
                    compare.setValueAt(String.valueOf(parent1[i]), i+2, 1);
                    if (parent1[i]==child[i]) simpoint1++; //if a trait is equal
            }
            if (parent.selected_critter.parent1!=null){               
                for (int i=0; i<parent.selected_critter.parent1.limbs.length; i++){
                    if (parent.selected_critter.parent1.limbs[i]!=null) compare.setValueAt(parent.selected_critter.parent1.limbs[i].getName(), i+16, 1);
                    else compare.setValueAt("none", i+16, 1);
                    if (parent.selected_critter.parent1.limbs[i]==parent.selected_critter.limbs[i]) simpoint1++; //if they have limbs in the same location
                } 
            } else compare.setValueAt("D E A D", 2, 1);

            
            //parent 2 column
            float[] parent2 = new float[13];
            int simpoint2=0;
            parent2=parent.selected_critter.parent2dna;
            for (int i=0; i<parent2.length; i++){
                compare.setValueAt(String.valueOf(parent2[i]), i+2, 3);
                if (parent2[i]==child[i]) simpoint2++; //if a trait is equal
            }
            if (parent.selected_critter.parent2!=null){
                for (int i=0; i<parent.selected_critter.parent2.limbs.length; i++){
                    if (parent.selected_critter.parent2.limbs[i]!=null) compare.setValueAt(parent.selected_critter.parent2.limbs[i].getName(), i+16, 3);
                    else compare.setValueAt("none", i+16, 3);
                    if (parent.selected_critter.parent2.limbs[i]==parent.selected_critter.limbs[i]) simpoint2++; //if they have limbs in the same location
                }
            }  else compare.setValueAt("D E A D", 2, 3);
            
            //child column
                //dna
                for (int i=0; i<child.length; i++){
                    compare.setValueAt(String.valueOf(child[i]), i+2, 2);
                }
                
                //limbs
                for (int i=0; i<parent.selected_critter.limbs.length; i++){
                    if (parent.selected_critter.limbs[i]!=null) compare.setValueAt(parent.selected_critter.limbs[i].getName(), i+16, 2);
                    else compare.setValueAt("none", i+16, 2);
                }
            
                
            //update similarity values
            compare.setValueAt(String.valueOf((float)simpoint1/17*100)+"%", 23, 1);
            compare.setValueAt(String.valueOf((float)simpoint2/17*100)+"%", 23, 3); 
            
            
        } else {
            target1.setText("None");
            target.setText("None");
        }
        
        } catch (NullPointerException e){
            log("Non-fatal problem: "+e.getMessage());
        }
        
        
        //update counters
        births.setText(String.valueOf(parent.births));
        deaths.setText(String.valueOf(parent.deaths));
        current_population.setText(String.valueOf(parent.current_pop));
        
        //redraw graphs with new data
        try{
            updateGraph(graphState);
        }
        catch (Exception e){
            log("(S)Non-fatal GUI error occured: "+e.getMessage());
        }
        
    }
    
    private void setData(){
        
        parent.init_population=Integer.parseInt(init_population.getValue().toString());
        parent.min_population=Integer.parseInt(min_population.getValue().toString());
        parent.init_resources=Integer.parseInt(init_resources.getValue().toString());
        parent.min_resources=Integer.parseInt(min_resources.getValue().toString());
        
        parent.best_num=Integer.parseInt(best_num.getValue().toString());
        parent.age_speed=(float)Integer.parseInt(age_speed.getValue().toString())/1000;
        parent.energy_speed=(float)Integer.parseInt(energy_speed.getValue().toString())/1000;
        
        parent.sim_frequency=(float)Integer.parseInt(sim_frequency.getValue().toString());
        parent.stat_frequency=Integer.parseInt(stat_frequency.getValue().toString());
        
        parent.xFloor=(float)Float.parseFloat(xFloor.getValue().toString());
        parent.yFloor=(float)Float.parseFloat(yFloor.getValue().toString());
                
        parent.range1=(float)Float.parseFloat(range1.getValue().toString());
        parent.range2=(float)Float.parseFloat(range2.getValue().toString());
                
	parent.init_obstacles=Integer.parseInt(init_obstacles.getValue().toString());
                
        parent.fixed_mutation=(float)Float.parseFloat(fixed_mutation.getValue().toString())/1000;
        parent.fixed_crossover=(float)Float.parseFloat(fixed_crossover.getValue().toString())/1000;
        
        parent.enforce_params=enforce_params;
        
        loadData();
    
    }
    
    private void updateGraph(String toLoad){
        
        data = new float[(maxdata>parent.stats.population.size())?parent.stats.population.size():maxdata];
        int startlen;
        
        graphState=toLoad; //need to remember the state of the graph for update purposes
        //System.out.println(toLoad + "----");
        
        
        if (parent.stats.population.size() > maxdata) startlen = parent.stats.population.size()-maxdata;
           else startlen = 0;
        
        int counter1=0;
        int counter2=0;
        
        if(toLoad.compareTo("Population")==0){
            for (Iterator<Integer> it=parent.stats.population.iterator(); it.hasNext();){
                Integer in = (Integer) it.next();
                if (counter1>=startlen){
                    data[counter2]=(float)in;
                    //System.out.print(data[counter2]+" ");
                    counter2++;
                }
                counter1++;
            }
            //System.out.println();
        } else if(toLoad.compareTo("Fitness")==0){
            for (Iterator<Float> it=parent.stats.avgfitness.iterator(); it.hasNext();){
                Float in = (Float) it.next();
                if (counter1>=startlen){
                    data[counter2]= in;
                    counter2++;
                }
                counter1++;
            } 
        } else if(toLoad.compareTo("Neural")==0){
            for (Iterator<Float> it=parent.stats.neuralefficiency.iterator(); it.hasNext();){
                Float in = (Float) it.next();
                if (counter1>=startlen){
                    data[counter2]= in;
                    counter2++;
                }
                counter1++;
            } 
        } else if(toLoad.compareTo("Movement")==0){
            for (Iterator<Float> it=parent.stats.movefficiency.iterator(); it.hasNext();){
                Float in = (Float) it.next();
                if (counter1>=startlen){
                    data[counter2]= in;
                    counter2++;
                }
                counter1++;
            }
        } else if(toLoad.compareTo("Children")==0){
           for (Iterator<Float> it=parent.stats.children.iterator(); it.hasNext();){
                Float in = (Float) it.next();
                if (counter1>=startlen){
                    data[counter2]= in;
                    counter2++;
                }
                counter1++;
            }
        } else if(toLoad.compareTo("Mutation")==0){
           for (Iterator<Float> it=parent.stats.mutation.iterator(); it.hasNext();){
                Float in = (Float) it.next();
                if (counter1>=startlen){
                    data[counter2]= in;
                    counter2++;
                }
                counter1++;
            }
        } else if(toLoad.compareTo("Lifespan")==0){
           for (Iterator<Float> it=parent.stats.maxlives.iterator(); it.hasNext();){
                Float in = (Float) it.next();
                if (counter1>=startlen){
                    data[counter2]= in;
                    counter2++;
                }
                counter1++;
            }
        } else if(toLoad.compareTo("Crossover")==0){
           for (Iterator<Float> it=parent.stats.crossover.iterator(); it.hasNext();){
                Float in = (Float) it.next();
                if (counter1>=startlen){
                    data[counter2]= in;
                    counter2++;
                }
                counter1++;
            }
        }
        
        //data has to be reversed
        //for(int j=0; j<data.length; j++) System.out.print(data[j]+",");
        //System.out.println();
        //float[] data_rev = new float[data.length];
        //for (int i=data.length; i>0; i--) data_rev[data.length-i] = data[i-1];
        
        //set data
        ((GraphingData)jPanel5).data=data;
        //set frequency
        ((GraphingData)jPanel5).pFreq=(int)data.length/10 + 1;
        //set label
        ((GraphingData)jPanel5).label=toLoad;
        //repaint component
        jPanel5.repaint();
        
    }
    
    private void kill(){
        //kill the selected critter
        if (parent.selected_critter!=null) parent.selected_critter.alive=false;
    }
    
    private void feed(){
        //fill up a critter
        if (parent.selected_critter!=null) parent.selected_critter.giveEnergy(parent.selected_critter.maxEnergy);
    }
    
    private void starve(){
        //remove half of energy from critter
        if (parent.selected_critter!=null) parent.selected_critter.takeEnergy(parent.selected_critter.energy/2);
    }
    
    private void poke(){
         //lift a critter up a bit
         if (parent.selected_critter!=null) parent.selected_critter.bControl.setLinearVelocity(new Vector3f(0,100f,0));
    }
    
    public static void log(String entry){
        if (log.getText().length() > 50000) clearLog();
        log.setText(log.getText()+"\n("+Util.getDateTime()+") "+entry);
    }
    
    private static void clearLog(){
        log.setText("("+Util.getDateTime()+")"+"(s)Log Cleared");
    }
    
    private void saveParams() throws IOException{
        
        //save parameters
        log("(S)Saving parameters...");
        
        File params= new File("params.ini");
        File params_old= new File("params_old.ini");
        
        //keep old parameters saved as well
        params_old.delete();
        params.renameTo(params_old);
        
        params= new File("params.ini");
        params.createNewFile();
        
        System.out.println(params.getPath());
        BufferedWriter writer = new BufferedWriter(new FileWriter(params));
        
        //write parameters
        writer.write("max_population "+parent.max_population);
        writer.newLine();
        writer.write("init_population "+Integer.parseInt(init_population.getValue().toString()));
        writer.newLine();
        writer.write("min_population "+Integer.parseInt(min_population.getValue().toString()));
        writer.newLine();
        writer.write("max_resources "+parent.max_resources);
        writer.newLine();
        writer.write("init_resources "+Integer.parseInt(init_resources.getValue().toString()));
        writer.newLine();
        writer.write("min_resources "+Integer.parseInt(min_resources.getValue().toString()));
        writer.newLine();
        writer.write("best_num "+Integer.parseInt(best_num.getValue().toString()));
        writer.newLine();
        writer.write("age_speed "+(float)Integer.parseInt(age_speed.getValue().toString())/1000);
        writer.newLine();
        writer.write("energy_speed "+(float)Float.parseFloat(energy_speed.getValue().toString())/1000);
        writer.newLine();
        writer.write("sim_frequency "+(float)Integer.parseInt(sim_frequency.getValue().toString()));
        writer.newLine();
        writer.write("stat_frequency "+Integer.parseInt(stat_frequency.getValue().toString()));
        writer.newLine();
        writer.write("xFloor "+(float)Float.parseFloat(xFloor.getValue().toString()));
        writer.newLine();
        writer.write("yFloor "+(float)Float.parseFloat(yFloor.getValue().toString()));
        writer.newLine();
        writer.write("zFloor 0.1");
        writer.newLine();        
        writer.write("range1 "+(float)Float.parseFloat(range1.getValue().toString()));
        writer.newLine();
        writer.write("range2 "+(float)Float.parseFloat(range2.getValue().toString()));
        writer.newLine();
        writer.write("max_obstacles "+parent.max_obstacles);
	writer.newLine();
        writer.write("init_obstacles "+Integer.parseInt(init_obstacles.getValue().toString()));
        writer.newLine();        
        writer.write("fixed_mutation "+(float)Float.parseFloat(fixed_mutation.getValue().toString())/1000);
        writer.newLine();
        writer.write("fixed_crossover "+(float)Float.parseFloat(fixed_crossover.getValue().toString())/1000);
        writer.newLine();
        writer.write("enforce_params "+ (enforce_params ? "1" : "0"));
        
        writer.close();
        
    }

}


